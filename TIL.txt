1. 밉맵 사용하는 방법
- 스테이징 텍스쳐를 만들어주고, 해당 스테이징 텍스쳐에 밉맵을 만들고자 하는 이미지 데이터를 CPU를 통하여 복사해준다.(MAP)
- 스테이징 텍스쳐를 사용하고자 하는 Texture로 CopySubresourceRegion를 통하여 복사해준다.

2. 멀티 샘플링된 GPU 데이터의 일부를 CPU로 복사
Texture2DMS를 Texture2D로 바꾸기 위해서는, ResolveSubresource 함수를 사용한다.
즉, 멀티 샘플링된 GPU 데이터의 일부를 CPU로 복사해오고 싶으면,
Back Buffer의 Texture2D(Texture2DMS)를 동일한 크기의 스테이징 Texture2D로 ResolveSubrsource로 가져오고,
스테이징 텍스쳐에서 CopySubresourceRegion을 통해 CPU로 복사하고자 하는 일부의 크기만큼의 Texture2D에 복사해준다.
마지막으로 일부의 크기로 정의된 Texture2D를 Map을 통하여 CPU로 복사한다.

3. 아웃라이너 그리기
- 모델을 일정한 스케일로 확대하여 단색으로 표현한 것을 아웃라이너로 사용할 수 있다.
- 이때 아웃라이너 모델이 기존 모델을 덮어버리므로 이를 방지하기 위하여 스텐실 버퍼를 사용한다.
- 기존 모델을 그릴때 스텐실 버퍼를 1로 채워 넣는다.
- 아웃라이너 모델을 스텐실 버퍼가 1이 아닌 경우에만 그린다.

4. 노멀 벡터 그리기
- 노멀 벡터의 경우, 모델 좌표계로 변경할 경우, Scaling에 대한 처리를 위하여 변환행렬의 역행렬의 전치를 곱해준다.
- 이후 투영 좌표계로 변경할 경우, 뷰 행렬과 프로젝션 행렬을 곱해준다.
- 지오메트리 셰이더는 입력에 대한 토폴로지를 변경할 수 있다.

5. HLSL에서 bool은 4바이트이다.

6. PostProcess 과정
- HDR 화질 물체를 멀티샘플링로 렌더링을 한다. (R16G16B16A16 / TEXTURE2DMS)
- TEXTURE2DMS를 TEXTURE2D 텍스쳐로 Resolve 한다. (R16G16B16A16 / TEXTURE2D)
- R16G16B16A16 Shader Resource View를 활용하여 R8G8B8A8 Render Target에 그려준다(R8G8B8A8 / TEXTURE2D)

7. Resize를 할 경우,
- SwapChain의 백버퍼를 참조하고 있는 RTV, SRV를 해제한다.
- SwapChain의 ResizeBuffer 멤버함수를 통해 사이즈를 바꾼다.
- SwapChain의 백버퍼를 다시 가지고와 기존에 해제한 자료들을 다시 생성한다.

8. D3D11_MAP
D3D11_MAP_READ : 리소스가 읽기용으로 매핑
D3D11_MAP_WRITE : 리소스가 쓰기를 위해 매핑
D3D11_MAP_READ_WRITE : 리소스가 읽기 및 쓰기를 위해 매핑
D3D11_MAP_WRITE_DISCARD, D3D11_MAP_WRITE_NO_OVERWRITE = https://megayuchi.com/2022/06/09/d3d12%EC%9D%98-map%EC%97%90-%EB%8C%80%ED%95%9C-%EA%B3%A0%EC%B0%B0/

9. DXGI Flip Mode
https://learn.microsoft.com/en-us/windows/win32/direct3ddxgi/dxgi-flip-model
- BitBlt 모델의 경우, 프레임을 업데이트한 결과를 화면으로 복사해온다
- Flip 모델의 경우, 프레임과 포인터를 공유하는 자원에 화면을 그리고, 포인터만 전달한다.
